Please answer the below core-java Questions:

What is programing language?
A. A programming language is a formal language that specifies a set of instructions that can be used to produce various kinds of output.
What jdk contains or composed of and define each components?
A. The java development kit(JDK) contains a private Java Virtual Mechine(JVM) and few other composed of resource of:
   appletviewer: Which can be used to run and debug applets without a web browser.
   apt: The annotation processing tool.
   extcheck: Utility that detects JAR file conflicts.
   idlj: The IDL-to-java compiler. This utiity generates java binding from a given java IDL file.
   jadswitch - The java access bridge. Exposes assistive technoogy on MIcrosoft windows systems.
   java: THe loader for java application. This tools is an interpreter and can interpret the class files generaed by the javac compiler.
   javac: The java compiler, which converts source code into java bytecode.
   javadoc: The documentation generator, which automatically generates documentation from source code comments.
   jar: The archiver, which packages related class libraries into a single JAR file.
   javafxpackager: Tool to package and sign javaFX applications.
   jarsigner: The jar signing andn verification tools.
   javah: The C header and stib generator. used to write native methods.
   javap: The class file disassembler.
   javaws: The java web start launcher for JNLP application.
   jConsole: Java monitoring and management console.
   jdb: The debugger.
   jhat: Java Heap Analysis Tool(experimental).
   jiinfo: This utility gets configuration information from a running java process or crash dump.(experimental)
   jmap Oracle jmap - Memory Map– This utility outputs the memory map for Java and can print shared object memory maps or heap memory details of a given process or core dump. (experimental)
   jmc – Java Mission Control
   jps – Java Virtual Machine Process Status Tool lists the instrumented HotSpot Java Virtual Machines (JVMs) on the target system. (experimental)
   jrunscript – Java command-line script shell.
   jstack – utility that prints Java stack traces of Java threads. (experimental)
   jstat – Java Virtual Machine statistics monitoring tool. (experimental)
   jstatd – jstat daemon (experimental)
   keytool – tool for manipulating the keystore.
   pack200 – JAR compression tool.
   policytool – the policy creation and management tool, which can determine policy for a Java runtime, specifying which permissions are available for code from various sources.
   VisualVM – visual tool integrating several command-line JDK tools and lightweight[clarification needed] performance and memory profiling capabilities.
   wsimport – generates portable JAX-WS artifacts for invoking a web service.
   xjc – Part of the Java API for XML Binding (JAXB) API. It accepts an XML schema and generates Java classes.
   Experimental tools may not be available in future versions of the JDK.
   The JDK also comes with a complete Java Runtime Environment, usually called a private runtime, due to the fact that it is separated from the "regular" JRE and has extra
   contents. It consists of a Java Virtual Machine and all of the class libraries present in the production environment, as well as additional libraries only useful to
   developers, such as the internationalization libraries and the IDL libraries.
What is IDE?
A. An Integrated Development Environment(IDE) is an application that facilates application development.
What are the IDEs available in the market to support java?
A. Intellij, Exlipse, NetBeans, Jdeveloper, Dr. Java, BlueJ, JCreator, JGrasp, Greenfoot, Condenvy.
Explain the entire java life cycle.
A. Every program will have a file name. That file name need to extention of .java. To compile the java  code we havee some command or process
   called javac or java Compiler. Java compiler compiles the java code and generates the (.class) file which contains byte code instruction.Next step is to load .class into Java virtual machine(JVM).
   JVM Architecture:
   1) Class loader subsystem: The  class loader sub system will allocate memory for the (.Class file).
   (.class) ===> byte code instructions. It also checks whether the byte code instructions are proper or not . If the byte code instructions are not proper then the class loader subsystem will stops the
   process for the executions. If the byte code instructions are proper then it will allow the code for the execution. If the byte code instructions are proper  then the class loader subsystem will
   divide the memory in to 5 areas:
   1)Method Area: This method area will allocate memory for the variables and methods
   2)Heap Area: This memory block will allocate memory for the objects.
   3) Java Stacks: It will allocate memory for the results of an method.
   4)PC Registers:
   Program Counter Registers: it will allocate a thread to a method . If we define n number of methods then the PC registers will allocate n number of threads.
   Threads: Executing group of statements to complete a task or it is a process.
   5)Native stacks:
   Interpreter and JIT Compiler-
   Interpreter: Which will converts the byte code instructions in to the machine language so that the processor of our machine will understand and generate the result on our screens.
   JIT: Just in time compiler
   To speed the execution of the java code or to make execution very firstly they attaches the JIT compiler to the interpreter.
what is class?
A.  A class is simply a represent of a type of object. It is a blueprint, or plan or template that describes the details of an object. Class composes of three things: a name, attributes and operation.
   A class in java can contain: data member, method, constructor, block, class and interface
What is object?
A. Instance of class. An entity that has state and behavior is knows as an object. Example : chair, bike, pen, table, car etc. It can be physical or logical(tangible and intangible). The example of intangible object is banking system.
What is the entry point of an application?
A.  Main Method
Why main is static?
A. Static method is belong to class not to object, since the main method is static JVM can call it without creating any instance of a class which contains the main method.If main method
   were not declared static than JVM has to create instance of main Class and since constructor can be overloaded and can have arguments there would not be any certain and consistent way for
   JVM to find main method in Java.Anything which is declared in class in Java comes under reference type and requires object to be created before using them but static method and static data
   are loaded into separate memory inside JVM called context which is created when a class is loaded. If main method is static than it will be loaded in JVM context and are available to
   execution.
Which class is the superclass of all classes?
A. The object
What is difference between path and classpath variables?
A. Path is an environment variable which is used by the operating system to find the executables. Classpath is an environment variable which is used by the Java compiler to find the path, of classes.ie in J2EE we give the path of jar files. 2).PATH is nothing but setting up an environment for operating system.
What is the difference between an Interface and Abstract class?
A. Abstract classes usually represent an abstract concept or an entity with partial or no implementation. On the other hand, an interface is an abstract type that is used to specify a contract that should be implemented by classes.
   Abstract classes should be inherited (or extended), while interfaces should be implemented.
Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
A. You can not instantiate an abstract class or an interface - you can instantiate one of their subclasses/implementers.
    Examples of such a thing are typical in the use of Java Collections.
    List<String> stringList = new ArrayList<String>();
what is Access Specifier?
A. Access specifier means how we access class, variable and method. Access specifier are Public, private, Protected and default.
What is OOP ? Define each feature of java OOP.
A. Object oriented programming language which deals with class and object. OOP features are:
   Abstraction:Abstraction in Java or Object oriented programming is a way to segregate implementation from an interface and one of the five fundamentals along with Encapsulation, Inheritance, Polymorphism, Class, and Object.
   Abstraction in Java is achieved by  using interface and abstract class in Java. An interface or abstract class is something which is not concrete , something which is incomplete. In order to use interface or abstract class,
   we need to extend and implement an abstract method with concrete behavior.Abstraction is creating interface to denote common behavior without specifying any details about how that behavior works.
   Inheritance: Property transfer from one class to another class means subclass class behaviour inherit from super class.A subclass does not inherit the private members of its parent class. However, if the superclass has public or
   protected methods for accessing its private fields, these can also be used by the subclass.A nested class has access to all the private members of its enclosing class—both fields and methods. Therefore, a public or protected nested
   class inherited by a subclass has indirect access to all of the private members of the superclass.
   Encapsulation:Data hiding and data binding is know encapsulation. A class is example of encapsulation. If we define private variable into class we cannot access it without public method, for that reason encapsulation is concept of
   information hiding.
   Polymorposism:Polymorphism is the ability of an object to take on many forms. The most common use of polymorphism in OOP occurs when a parent class reference is used to refer to a child class object. Any Java object that can pass
   more than one IS-A test is considered to be polymorphic. In Java, all Java objects are polymorphic since any object will pass the IS-A test for their own type and for the class Object.
What is Java Package and which package is imported by default?
A. java.lang package is imported by default, no need to explicitly import it. Classes in the java.lang package do not need to be imported (the compiler acts like they are always imported
What is API? Name list of API that you have used so far.
A. Application Programming Interface. Arrays, ArrayList, BufferedReader, BufferedWriter, Collections, DataInputStream, Date, FileReader, HashMap, Hashset, Exception.
Does java support multiple inheritance, explain why or why not?
A. No, for that rerason we use Interface to support multiple inheritance.
What is method overloading and when it happens?
A. Defining multiple method with same name but method signature are different is method overloading. It happens at  compile time.
Explain exceptions in java and how to handle it.
A. Undesirable situation could be happened or problem could be arrise at the time of program execution. A checked exception that occurs at the compile time and An unchecked exception that occurs at the time of execution. These are also called
   as Runtime Exceptions.We handle it by try-catch block
What is static keyword in java? How it has been used in variables and methods ?
A. Static is a keyword in java and we can’t create a class or package name as static. static keyword is used to create a Class level variable in java. static variables and methods are part of the class, not the instances of the class.
   static variable which belongs to the class and not to object(instance)
What is final and how it has been used variables and methods?
A. Final is a keyword.Final is used to apply restrictions on class, method and variable. Final class can't be inherited, final method can't be overridden and final variable value can't be changed.
What is final, finally and finalize?
A. Final is a keyword.Final is used to apply restrictions on class, method and variable. Final class can't be inherited, final method can't be overridden and final variable value can't be changed.
   Finally is a block.Finally is used to place important code, it will be executed whether exception is handled or not. It ‘s execute important code such as closing connection, stream etc.
   Finalize is a method.Finalize is used to perform clean up processing just before object is garbage collected.
What is a constructor ?
A. Constructor in java is a special type of method (look like a method but it is not a method) that is used to initialize the object or class property.
   Java constructor is invoked at the time of object creation. It constructs the values i.e. provides data for the object that is why it is known as constructor.
   There are basically two rules defined for the constructor.
   Constructor name must be same as its class name
   Constructor must have no explicit return type
   There are two types of constructors:
   Default constructor (no-arg constructor) Constructor is mandatory but If we do not provide any constructor then compiler will provide default constructor.
   Parameterized constructor
Can we have multiple constructors in a class?
A. A class can have multiple constructors, as long as their signature (the parameters they take) are not the same.
    You can define as many constructors as you need. When a Java class contains multiple constructors,
     we say that the constructor is overloaded (comes in multiple versions)
If we don't have a constructor declared, what is called during the object creation?
A. Default is loaded.
What is "this" keyword in java ?
A. This keyword is a reference variable that refers to the current object and current class instance variable.this() can be used to invoke current class constructor.
   It can be used to invoke current class method (implicitly).this can be passed as an argument in the method call.this can be passed as argument in the constructor call.
   this keyword can also be used to return the current class instance.
What is "super" keyword in java? How many possible way can you use?
A. The super keyword in java is a reference variable that is used to refer immediate parent class object.Whenever we create the instance of subclass, an instance of parent class is created implicitly i.e. referred by super reference variable.
   super is used to refer immediate parent class instance variable.super() is used to invoke immediate parent class constructor.super is used to invoke immediate parent class method.
What is JVM stand for ?
A. Java Virtual Machine
Is JVM platform independent?
A. Yes
What version of java are you using?
A. Java Version 1.8.0_25 from Oracle Corporation
What is JAR stand for ?
A. JAR stands for "Java ARchive"
What is the difference between JDK and JVM?
A. Firstly, let's see the basic differences between the JDK, JRE and JVM. JVM (Java Virtual Machine) is an abstract machine. It is a specification that provides runtime environment in which java bytecode can be executed. ... But, Java is platform independent
What is the difference between JVM and JRE?
A. The JRE is the environment within which the virtual machine runs. JRE is the container, JVM is the content. Java Runtime Environment contains JVM, class libraries, and other supporting files. It does not contain any development tools such as compiler, debugger, etc.
What is compile time and run time?
A. When source code compiled into machine code in order to become and executable program. This compilation process is referred to as compile time.
   A compiled program can be opened and run by a user. When an application is running, it is called runtime.
   The terms "runtime" and "compile time" are often used by programmers to refer to different types of errors. A compile time error is a problem such as a syntax error or missing file reference
   that prevents the program from successfully compiling. The compiler produces compile time errors and usually indicates what line of the source code is causing the problem.
   If a program's source code has already been compiled into an executable program, it may still have bugs that occur while the program is running. Examples include features that don't work, unexpected program behavior, or
   program crashes. These types of problems are called runtime errors since they occur at runtime.
What is heap?
A. The heap is a region of your computer's memory that is not managed automatically, and is not as tightly managed by the CPU. It is a more free-floating region of memory (and is larger).
   To allocate memory on the heap, we must use malloc() or calloc(), which are built-in C functions. Once we have allocated memory on the heap, we are responsible for using free() to deallocate that memory once we don't need it any more. If we fail to do this,
   our program will have what is known as a memory leak. That is, memory on the heap will still be set aside (and won't be available to other processes). As we will see in the debugging section, there is a tool called valgrind that can help we detect memory leaks.
How java manage it's memory?
A. Java maintains a stack to store all object references whichever are being in use by program. Objects actually stores in memory heap and their references are maintained on memory stack.
   As soon as we create an object in program, its information is being saved to memory with some fixed byte pattern. Now we can use the start of memory location as reference id for this object.
   In program, there are various kind of scopes defined by Java. These are like code block scope, method level scope, class level scope, package scope and whole program level scope etc.
   These scopes generally has parent <> child <> sibling relations with each other. Now as soon as the program scope initialize, a corresponding scope data storage structure (data structure to save the
   scope variable and other data which will have the memory references of the actual objects in memory) can be made and pushed to memory stack. Similarly other scope structures can be made as soon as they
   come in existence and can be stored with their parent scope. These scope data structures remain on stack till the corresponding scope is active in program. As soon as, it gets deactivated; the corresponding
   data structure will be removed from stack. Take it like as program thread enters into a method, we create a scope data structure for method scope and push it to stack with its parent scope which should be class scope.
   Now as program thread leaves the method, we remove the corresponding scope data from the stack. Scope can interact with each other as per the language protocol because they have parent <> child relationship.
   This is a simplified version of memory stack with JVM. Now we can visualize scope data structures used to be created or destroyed with the activation or deactivation of corresponding program scope.

What is the difference between String, StringBuffer and StringBuilder?
A. String can not be used by two threads simultaneously. String once assigned can not be changed. StringBuffer is mutable means one can change the value of the object . ... StringBuffer has the same methods as the StringBuilder , but each method in StringBuffer is synchronized that is StringBuffer is thread safe
What is Singleton class?
A.In object-oriented programming, a singleton class is a class that can have only one object (an instance of the class) at a time. After first time, if we try to instantiate the Singleton class, the new variable also points to the first instance created.
What is Serialization and Deserialization?
A. Serialization is a mechanism of converting the state of an object into a byte stream. Deserialization is the reverse process where the byte stream is used to recreate the actual Java object in memory. This mechanism is used to persist the object.
when to use transient variable in java?
A. The rule is, when a variable is marked as transient, its object won't be serialized during serialization.
    A transient variable is a variable that may not be serialized.
    You use the transient keyword to indicate to the Java virtual machine that the indicated variable is not part of the persistent state of the object.
Difference between while and do..while loop?
A. Only difference between these two loops is that, in while loops, test expression is checked at first but, in do...while loop code is executed at first then the condition is checked. So, the code are executed at least once in do...while loops.
What is Enum?
A. In computer programming, an enumerated type (also called enumeration, enum, or factor in the R programming language, and a categorical variable in statistics) is a data type consisting of a set of named values called elements, members, enumeral, or enumerators of the type.
What is Iterator?
A. In computer programming, an iterator is an object that enables a programmer to traverse a container, particularly lists. Various types of iterators are often provided via a container's interface.
Which one will take more memory, an int or Integer?
A. For a Integer it takes only 32 bit . value is the only member variable which takes memory.
Why is String Immutable in Java?
A. Were String not immutable, a connection or file would be changed and lead to serious security threat. Mutable strings could cause security problem in Reflection too, as the parameters are strings. Efficiency The hashcode of string is frequently used in Java.
What is constructor chaining in Java?
A. Constructors in Java. Constructor chaining is the process of calling one constructor from another constructor with respect to current object. Constructor chaining can be done in two ways: Within same class: It can be done using this() keyword for constructors in same class.
The difference between Serial and Parallel Garbage Collector?
What is JIT stands for?
A.Just In time
Explain Java Heap space and Garbage collection?
A. Garbage Collection. Garbage collection is the process of freeing space in the heap or the nursery for allocation of new objects. This section describes the garbage collection in the JRockit JVM.
Can you guarantee the garbage collection process?
A. No.
What is the difference between stack and heap in Java?
A. Image result for What is the difference between stack and heap in Java?
   Difference between Java Heap Space and Stack Memory. ... Whenever an object is created, it's always stored in the Heap space and stack memory contains the reference to it. Stack memory only contains local primitive variables and reference variables to objects in heap space.
What is reflection in java and why is it useful?
A. The code can be written against known interfaces, but the actual classes to be used can be instantiated using reflection from configuration files. Java Reflection is quite powerful and can be very useful. ... It is also possible to instantiate new objects, invoke methods and get/set field values using reflection.
what is multithreading in java?
A. Multithreading in java is a process of executing multiple threads simultaneously. Thread is basically a lightweight sub-process, a smallest unit of processing. Multiprocessing and multithreading, both are used to achieve multitasking.
What is the use of synchronization in Java?
A. So there is a need to synchronize the action of multiple threads and make sure that only one thread can access the resource at a given point in time. This is implemented using a concept called monitors. Each object in Java is associated with a monitor, which a thread can lock or unlock.
What is Framework?
A. While frameworks generally refer to broad software development platforms, the term can also be used to describe a specific framework within a larger programming environment. For example, multiple Java frameworks, such as Spring, ZK, and the Java Collections Framework (JCF) can be used to create Java programs.
What are the testing Framework available in java?
A. The Java testing framework is very simple to use, and provides annotations for test method identifications. ... Although JUnit is a popular unit testing framework, it can also be used for integration and acceptance tests. So, you can easily integrate JUnit with standard IDEs, like eclipse and netbeans
Difference between jUnit and testNG?
A. Major difference in TestNG and JUnit test frameworks is their scope. I suggest to use TestNG as core unit test framework for Java project, because TestNG is more advance in parameterize testing, dependency testing and suite testing (Grouping concept). TestNG is meant for high-level testing and complex integration test
What are the dependencies for this project?
A. Dependencies are the relationships of the preceding tasks to the succeeding tasks. Tasks may have multiple preceding tasks and multiple succeeding tasks. The most common dependency relationship is a finish-to-start relationship. ... Project Insight, project management software, supports all four dependency relationships.
what is dependency injection in java?
A. A framework class, usually called the dependency container, could analyze the dependencies of this class. With this analysis it is able to create an instance of the class and inject the objects into the defined dependencies, via Java reflection. ... If dependency injection is used, a Java class can be tested in isolation.
What is static binding and dynamic binding?
A. Actual object is used for binding. It is also called early binding because binding happens during compilation. It is also called late binding because binding happens at run time. Method overloading is the best example of static binding. Method overriding is the best example of dynamic binding.









